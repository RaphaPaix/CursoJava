9.1 Introdução a orientação a objetos: Classe e objeto -> Uma classe é formada por dados e comportamentos, para representar uma regra geral de um objeto.
9.2 Ideia central da POO: tudo pode ser representado por um objeto na programação. Exemplo: Carro e seus atributos.
9.3 O que faz um objeto em JAVA - tráfego de dados entre a tela, camada interna e banco de dados. Carregar, processar, gravar e exibir informações agrupadas.
9.4 Paradigma procedural vs objetos
9.5 Caracteristicas dos objetos: atributos e métodos (açoes)
9.6 Classe e Objeto aluno (professor utilizou novo pacote para adicionar a classe aluno)
9.7 Construtor de objeto
	Padrão: Aluno aluno1 = new Aluno();
	public Aluno() {
		
	}
	Com parametro: Aluno aluno4 = new Aluno("Maria");
	public Aluno (String nomePadrao) {
		nome = nomePadrao;
	}
9.8 Instanciação, atributos e referências
	new Aluno() é uma instancia -> criaçao de objeto
	aluno1 é uma referência para o objeto aluno (variável)
	atributos são as caracteristicas
9.9 Declaração de tipos publico e privado
	privado: exclusivo da classe
	publico: para acesso de outras classes
9.10 Getters e Setters
	get = obter o valor dos atributos
	set = adicionar o valor nos atributos
9.11 Primeiro método de cálculo de notas
9.12 Metodos com retorno (aprovado ou reprovado)
9.13 Solucionando problemas de NullPointerException 
	Utiliza o debug para ver passo a passo
	Identifica classe e linha (erro pode estar na anterior, objeto ou variável nulo)
9.14 Entrada de dados com teclado
9.15 Conhecendo sobre o toString
	representa uma informação do objeto -> descriçao do objeto na memória
	gera o método na classe e depois invoca para imprimir todo o objeto
9.16 métodos Equals() e HashCode: diferenciar e comparar objetos
	equals os objetos saem diferentes pois o JAVA diferencia por locação de memória
	gera o hashcode para o atributo que queira comparar (elimina essa diferenciação)
	pode identificar IGUALDADE OU DIFERENCIAÇÃO
9.17 Criando atributos da discplina aluno (dentro da classe Aluno) - não recomendado
9.18 Criando um objeto com a disciplina aluno